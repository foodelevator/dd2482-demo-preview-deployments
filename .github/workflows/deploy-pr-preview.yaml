name: "Deploy Pull Request Preview"
on:
  pull_request:
    types: [opened, synchronize]

permissions:
  pull-requests: write

jobs:
  deploy_pr_preview:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout PR
        uses: actions/checkout@v5

      - name: Load SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_KEY" > ~/.ssh/id_ed25519
          echo "ipv4-ssh.devops-demo.0m.nu ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIDz2WeOy65+ErgkA+yvgA/8Z1Nx7+ayN7wfwtwF8vGMm" >> ~/.ssh/known_hosts
          chmod 600 ~/.ssh/id_ed25519
        env:
          SSH_KEY: ${{ secrets.SSH_KEY }}

      - name: Copy database from staging
        if: github.event.action == 'opened'
        env:
          NAME: preview-${{ github.event.number }}
        run: |
          echo "
              SELECT pg_terminate_backend(pid) FROM pg_stat_activity WHERE datname = 'test-staging';
              CREATE DATABASE \"test-$NAME\" OWNER test TEMPLATE \"test-staging\";
          " | ssh user@ipv4-ssh.devops-demo.0m.nu -- sudo -u postgres psql

      - name: Run docker compose up
        env:
          DOCKER_HOST: ssh://user@ipv4-ssh.devops-demo.0m.nu
          NAME: preview-${{ github.event.number }}
        run: docker compose --project-name test-$NAME -f app/compose.yaml up --build -d

      - uses: actions/github-script@v8
        if: github.event.action == 'opened'
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'A preview of this PR has been deployed to https://preview-${{ github.event.number }}.devops-demo.0m.nu/'
            })
